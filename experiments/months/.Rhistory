# (I think this is a bug in groundhogr, and I have no idea why this fixes it, but that's what worked for me.)
library(groundhog)
pkgs = c('dplyr', 'tidyr', 'ggplot2', 'ggExtra', 'lme4', 'lmerTest', 'mlogit', 'stringdist', 'rje')
groundhog.library(pkgs, '2020-03-01')
rm(list=ls())
# load packages with groundhog (http://groundhogr.com/)
# if you get this error:
# "groundhog says: 11 of the 21 packages needed by 'dplyr_0.8.4' are currently loaded, but not with the version that is needed."
# then run "rm(list=ls())", restart your R session, and try again.
#  if you still get the error, then do all the following steps in order:
# switch to R version 4, restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-06-01')", restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-03-01')", switch back to R version 3, restart your R session, and try running this script again.
# (I think this is a bug in groundhogr, and I have no idea why this fixes it, but that's what worked for me.)
library(groundhog)
pkgs = c('dplyr', 'tidyr', 'ggplot2', 'ggExtra', 'lme4', 'lmerTest', 'mlogit', 'stringdist', 'rje')
groundhog.library(pkgs, '2020-03-01')
groundhog.library(sjstats, '2020-09-01')
groundhog.library(sjstats, '2020-06-01')
groundhog.library(sjstats, '2020-04-01')
groundhog.library(sjstats, '2020-04-01')
# load packages with groundhog (http://groundhogr.com/)
# if you get this error:
# "groundhog says: 11 of the 21 packages needed by 'dplyr_0.8.4' are currently loaded, but not with the version that is needed."
# then run "rm(list=ls())", restart your R session, and try again.
#  if you still get the error, then do all the following steps in order:
# switch to R version 4, restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-06-01')", restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-03-01')", switch back to R version 3, restart your R session, and try running this script again.
# (I think this is a bug in groundhogr, and I have no idea why this fixes it, but that's what worked for me.)
library(groundhog)
groundhog.library(sjstats, '2020-04-01')
load("/Users/adam/Me/Psychology/Projects/choicesets/git2/experiments/food/test.rdata")
std_beta(m.cs)
std_beta
rm(list=ls())
require(sjstats)
std_beta
UseMethod('std_beta')
std_beta <- function(fit, ci.lvl = .95, ...) {
# compute ci, two-ways
ci <- 1 - ((1 - ci.lvl) / 2)
# code from Ben Bolker, see
# http://stackoverflow.com/a/26206119/2094622
sdy <- stats::sd(lme4::getME(fit, "y"))
sdx <- apply(lme4::getME(fit, "X"), 2, sd)
sc <- lme4::fixef(fit) * sdx / sdy
se.fixef <- stats::coef(summary(fit))[, "Std. Error"]
se <- se.fixef * sdx / sdy
data_frame(
term = names(lme4::fixef(fit)),
std.estimate = sc,
std.error = se,
conf.low = sc - stats::qnorm(ci) * se,
conf.high = sc + stats::qnorm(ci) * se
) %>%
dplyr::slice(-1)
}
rm(list=ls())
std_beta <- function(fit, ci.lvl = .95, ...) {
# compute ci, two-ways
ci <- 1 - ((1 - ci.lvl) / 2)
# code from Ben Bolker, see
# http://stackoverflow.com/a/26206119/2094622
sdy <- stats::sd(lme4::getME(fit, "y"))
sdx <- apply(lme4::getME(fit, "X"), 2, sd)
sc <- lme4::fixef(fit) * sdx / sdy
se.fixef <- stats::coef(summary(fit))[, "Std. Error"]
se <- se.fixef * sdx / sdy
data_frame(
term = names(lme4::fixef(fit)),
std.estimate = sc,
std.error = se,
conf.low = sc - stats::qnorm(ci) * se,
conf.high = sc + stats::qnorm(ci) * se
) %>%
dplyr::slice(-1)
}
# load packages with groundhog (http://groundhogr.com/)
# if you get this error:
# "groundhog says: 11 of the 21 packages needed by 'dplyr_0.8.4' are currently loaded, but not with the version that is needed."
# then run "rm(list=ls())", restart your R session, and try again.
#  if you still get the error, then do all the following steps in order:
# switch to R version 4, restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-06-01')", restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-03-01')", switch back to R version 3, restart your R session, and try running this script again.
# (I think this is a bug in groundhogr, and I have no idea why this fixes it, but that's what worked for me.)
library(groundhog)
pkgs = c('dplyr', 'tidyr', 'ggplot2', 'ggExtra', 'lme4', 'lmerTest', 'mlogit', 'stringdist', 'rje')
groundhog.library(pkgs, '2020-03-01')
rm(list=ls())
# load packages with groundhog (http://groundhogr.com/)
# if you get this error:
# "groundhog says: 11 of the 21 packages needed by 'dplyr_0.8.4' are currently loaded, but not with the version that is needed."
# then run "rm(list=ls())", restart your R session, and try again.
#  if you still get the error, then do all the following steps in order:
# switch to R version 4, restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-06-01')", restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-03-01')", switch back to R version 3, restart your R session, and try running this script again.
# (I think this is a bug in groundhogr, and I have no idea why this fixes it, but that's what worked for me.)
library(groundhog)
pkgs = c('dplyr', 'tidyr', 'ggplot2', 'ggExtra', 'lme4', 'lmerTest', 'mlogit', 'stringdist', 'rje')
groundhog.library(pkgs, '2020-03-01')
std_beta <- function(fit, ci.lvl = .95, ...) {
# compute ci, two-ways
ci <- 1 - ((1 - ci.lvl) / 2)
# code from Ben Bolker, see
# http://stackoverflow.com/a/26206119/2094622
sdy <- stats::sd(lme4::getME(fit, "y"))
sdx <- apply(lme4::getME(fit, "X"), 2, sd)
sc <- lme4::fixef(fit) * sdx / sdy
se.fixef <- stats::coef(summary(fit))[, "Std. Error"]
se <- se.fixef * sdx / sdy
data_frame(
term = names(lme4::fixef(fit)),
std.estimate = sc,
std.error = se,
conf.low = sc - stats::qnorm(ci) * se,
conf.high = sc + stats::qnorm(ci) * se
) %>%
dplyr::slice(-1)
}
load("/Users/adam/Me/Psychology/Projects/choicesets/git2/experiments/food/test.rdata")
std_beta(m.cs)
rm(list=ls())
require(sjstats)
citation(sjstats)
citation('sjstats')
rm(list=ls())
# load packages with groundhog (http://groundhogr.com/)
# if you get this error:
# "groundhog says: 11 of the 21 packages needed by 'dplyr_0.8.4' are currently loaded, but not with the version that is needed."
# then run "rm(list=ls())", restart your R session, and try again.
#  if you still get the error, then do all the following steps in order:
# switch to R version 4, restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-06-01')", restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-03-01')", switch back to R version 3, restart your R session, and try running this script again.
# (I think this is a bug in groundhogr, and I have no idea why this fixes it, but that's what worked for me.)
library(groundhog)
pkgs = c('dplyr', 'tidyr', 'ggplot2', 'ggExtra', 'lme4', 'lmerTest', 'mlogit', 'stringdist', 'rje')
groundhog.library(pkgs, '2020-03-01')
# This function to compute standard
std_beta <- function(fit, ci.lvl = .95, ...) {
# compute ci, two-ways
ci <- 1 - ((1 - ci.lvl) / 2)
# code from Ben Bolker, see
# http://stackoverflow.com/a/26206119/2094622
sdy <- stats::sd(lme4::getME(fit, "y"))
sdx <- apply(lme4::getME(fit, "X"), 2, sd)
sc <- lme4::fixef(fit) * sdx / sdy
se.fixef <- stats::coef(summary(fit))[, "Std. Error"]
se <- se.fixef * sdx / sdy
data_frame(
term = names(lme4::fixef(fit)),
std.estimate = sc,
std.error = se,
conf.low = sc - stats::qnorm(ci) * se,
conf.high = sc + stats::qnorm(ci) * se
) %>%
dplyr::slice(-1)
}
load("/Users/adam/Me/Psychology/Projects/choicesets/git2/experiments/food/study1_output.rdata")
std_beta(m.cs)
View(df.model.cs)
m.cs = lmer(prob ~ val.high + val.spec.high + (1 | subject), data = df.model.cs %>% mutate(val.high = factor(val.high), val.spec.high = factor(val.spec.high)))
summary(m.cs)
std_beta(m.cs)
citation('sjstats')
std_beta(m.selection)
rm(list=ls())
load("/Users/adam/Me/Psychology/Projects/choicesets/git2/experiments/food/study2_output.rdata")
std_beta(m.cs)
rm(list=ls())
# setup -------------------------------------------------------------------
# load packages with groundhog (http://groundhogr.com/)
# start a new R session before doing this!
# if you get this (or any other) error:
# "groundhog says: 11 of the 21 packages needed by 'dplyr_0.8.4' are currently loaded, but not with the version that is needed."
# then run "rm(list=ls())", restart your R session, and try again.
#  if you still get the error, then do all the following steps in order:
# switch to R version 4, restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-06-01')", restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-03-01')", switch back to R version 3, restart your R session, and try running this script again.
# (I think this is a bug in groundhogr, and I have no idea why this fixes it, but that's what worked for me.)
library(groundhog)
pkgs = c('dplyr', 'tidyr', 'ggplot2', 'ggExtra', 'lme4', 'lmerTest', 'mlogit', 'stringdist', 'rje')
groundhog.library(pkgs, '2020-03-01')
# Only works in RStudio -- otherwise you have to set the path manually
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# update ggplot theme
theme_update(strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
axis.text=element_text(size=30, colour = "black"),
axis.title=element_text(size=18, face = "bold"),
axis.title.x = element_text(vjust = 0),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 20),
plot.title = element_text(size = 26, face = "bold", vjust = 1),
panel.margin = unit(1.0, "lines"),
plot.margin = unit(c(0.5,  0.5, 0.5, 0.5), "lines"),
axis.line = element_line(colour = "black", size = 2),
axis.ticks = element_line(color = 'black', size = 3),
axis.ticks.length = unit(.25, 'cm')
)
# make some handy functions
se = function(x) {return(sd(x, na.rm = T) / sqrt(sum(!is.na(x))))}
se.p = function(x) {return(sqrt(mean(x, na.rm = T) * (1 - mean(x, na.rm = T)) / sum(!is.na(x))))}
ci = function(m,s) {return(c(m - 1.96*s, m + 1.96*s))}
dodge <- position_dodge(width=0.9)
betterLine = function(data, formula, color = '#105db0') {
lg = summary(lm(formula, data))$coefficients
return(c(geom_abline(intercept = lg[1,1], slope = lg[2,1], color = color, size = 1.25),
geom_abline(intercept = lg[1,1] - lg[1,2], slope = lg[2,1], color = color, linetype = 'dashed', size = 1, alpha = .8),
geom_abline(intercept = lg[1,1] + lg[1,2], slope = lg[2,1], color = color, linetype = 'dashed', size = 1, alpha = .8)))
}
# This function is to compute standardized beta coefficients from a mixed effects model.
# It is copied verbatim from the package 'sjstats', version 0.17.2.
# The reason it's copied here (instead of loading the package) is that, when I did the analysis,
# I was using this latest version of sjstats, but with an old version of R (3.6.3).
# Groundhog won't let me use the latest version with an old version of R, and the older version was giving different answers,
# so I decided the simplest solution was just to copy the relevant function into my script.
# Citation:
# Lüdecke D (2019). _sjstats: Statistical Functions for Regression Models (Version 0.17.5)_. doi: 10.5281/zenodo.1284472 (URL: https://doi.org/10.5281/zenodo.1284472), <URL: https://CRAN.R-project.org/package=sjstats>.
std_beta <- function(fit, ci.lvl = .95, ...) {
# compute ci, two-ways
ci <- 1 - ((1 - ci.lvl) / 2)
# code from Ben Bolker, see
# http://stackoverflow.com/a/26206119/2094622
sdy <- stats::sd(lme4::getME(fit, "y"))
sdx <- apply(lme4::getME(fit, "X"), 2, sd)
sc <- lme4::fixef(fit) * sdx / sdy
se.fixef <- stats::coef(summary(fit))[, "Std. Error"]
se <- se.fixef * sdx / sdy
data_frame(
term = names(lme4::fixef(fit)),
std.estimate = sc,
std.error = se,
conf.low = sc - stats::qnorm(ci) * se,
conf.high = sc + stats::qnorm(ci) * se
) %>%
dplyr::slice(-1)
}
load("/Users/adam/Me/Psychology/Projects/choicesets/git2/experiments/food/study2_output.rdata")
(.packages())
citation('sjstats')
std_beta(m.cs)
# load packages with groundhog (http://groundhogr.com/)
# start a new R session before doing this!
# if you get this (or any other) error:
# "groundhog says: 11 of the 21 packages needed by 'dplyr_0.8.4' are currently loaded, but not with the version that is needed."
# then run "rm(list=ls())", restart your R session, and try again.
#  if you still get the error, then do all the following steps in order:
# switch to R version 4, restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-06-01')", restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-03-01')", switch back to R version 3, restart your R session, and try running this script again.
# (I think this is a bug in groundhogr, and I have no idea why this fixes it, but that's what worked for me.)
library(groundhog)
pkgs = c('dplyr', 'tidyr', 'ggplot2', 'ggExtra', 'lme4', 'lmerTest', 'mlogit', 'stringdist', 'rje')
groundhog.library(pkgs, '2020-03-01')
rm(list=ls())
# load packages with groundhog (http://groundhogr.com/)
# start a new R session before doing this!
# if you get this (or any other) error:
# "groundhog says: 11 of the 21 packages needed by 'dplyr_0.8.4' are currently loaded, but not with the version that is needed."
# then run "rm(list=ls())", restart your R session, and try again.
#  if you still get the error, then do all the following steps in order:
# switch to R version 4, restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-06-01')", restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-03-01')", switch back to R version 3, restart your R session, and try running this script again.
# (I think this is a bug in groundhogr, and I have no idea why this fixes it, but that's what worked for me.)
library(groundhog)
pkgs = c('dplyr', 'tidyr', 'ggplot2', 'ggExtra', 'lme4', 'lmerTest', 'mlogit', 'stringdist', 'rje')
groundhog.library(pkgs, '2020-03-01')
rm(list=ls())
# setup -------------------------------------------------------------------
# load packages with groundhog (http://groundhogr.com/)
# start a new R session before doing this!
# if you get this (or any other) error:
# "groundhog says: 11 of the 21 packages needed by 'dplyr_0.8.4' are currently loaded, but not with the version that is needed."
# then run "rm(list=ls())", restart your R session, and try again.
#  if you still get the error, then do all the following steps in order:
# switch to R version 4, restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-06-01')", restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-03-01')", switch back to R version 3, restart your R session, and try running this script again.
# (I think this is a bug in groundhogr, and I have no idea why this fixes it, but that's what worked for me.)
library(groundhog)
pkgs = c('dplyr', 'tidyr', 'ggplot2', 'ggExtra', 'lme4', 'lmerTest', 'mlogit', 'stringdist', 'rje')
groundhog.library(pkgs, '2020-03-01')
# Only works in RStudio -- otherwise you have to set the path manually
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# update ggplot theme
theme_update(strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
axis.text=element_text(size=30, colour = "black"),
axis.title=element_text(size=18, face = "bold"),
axis.title.x = element_text(vjust = 0),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 20),
plot.title = element_text(size = 26, face = "bold", vjust = 1),
panel.margin = unit(1.0, "lines"),
plot.margin = unit(c(0.5,  0.5, 0.5, 0.5), "lines"),
axis.line = element_line(colour = "black", size = 2),
axis.ticks = element_line(color = 'black', size = 3),
axis.ticks.length = unit(.25, 'cm')
)
# make some handy functions
se = function(x) {return(sd(x, na.rm = T) / sqrt(sum(!is.na(x))))}
se.p = function(x) {return(sqrt(mean(x, na.rm = T) * (1 - mean(x, na.rm = T)) / sum(!is.na(x))))}
ci = function(m,s) {return(c(m - 1.96*s, m + 1.96*s))}
dodge <- position_dodge(width=0.9)
betterLine = function(data, formula, color = '#105db0') {
lg = summary(lm(formula, data))$coefficients
return(c(geom_abline(intercept = lg[1,1], slope = lg[2,1], color = color, size = 1.25),
geom_abline(intercept = lg[1,1] - lg[1,2], slope = lg[2,1], color = color, linetype = 'dashed', size = 1, alpha = .8),
geom_abline(intercept = lg[1,1] + lg[1,2], slope = lg[2,1], color = color, linetype = 'dashed', size = 1, alpha = .8)))
}
# This function is to compute standardized beta coefficients from a mixed effects model.
# It is copied verbatim from the package 'sjstats', version 0.17.2.
# The reason it's copied here (instead of loading the package) is that, when I did the analysis,
# I was using this latest version of sjstats, but with an old version of R (3.6.3).
# Groundhog won't let me use the latest version with an old version of R, and the older version was giving different answers,
# so I decided the simplest solution was just to copy the relevant function into my script.
# Citation:
# Lüdecke D (2019). _sjstats: Statistical Functions for Regression Models (Version 0.17.5)_. doi: 10.5281/zenodo.1284472 (URL: https://doi.org/10.5281/zenodo.1284472), <URL: https://CRAN.R-project.org/package=sjstats>.
std_beta <- function(fit, ci.lvl = .95, ...) {
# compute ci, two-ways
ci <- 1 - ((1 - ci.lvl) / 2)
# code from Ben Bolker, see
# http://stackoverflow.com/a/26206119/2094622
sdy <- stats::sd(lme4::getME(fit, "y"))
sdx <- apply(lme4::getME(fit, "X"), 2, sd)
sc <- lme4::fixef(fit) * sdx / sdy
se.fixef <- stats::coef(summary(fit))[, "Std. Error"]
se <- se.fixef * sdx / sdy
data_frame(
term = names(lme4::fixef(fit)),
std.estimate = sc,
std.error = se,
conf.low = sc - stats::qnorm(ci) * se,
conf.high = sc + stats::qnorm(ci) * se
) %>%
dplyr::slice(-1)
}
load("/Users/adam/Me/Psychology/Projects/choicesets/git2/experiments/food/study2_output.rdata")
std_beta(m.cs)
rm(list=ls())
# setup -------------------------------------------------------------------
# load packages with groundhog (http://groundhogr.com/)
# if you get this error:
# "groundhog says: 11 of the 21 packages needed by 'dplyr_0.8.4' are currently loaded, but not with the version that is needed."
# then run "rm(list=ls())", restart your R session, and try again.
#  if you still get the error, then do all the following steps in order:
# switch to R version 4, restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-06-01')", restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-03-01')", switch back to R version 3, restart your R session, and try running this script again.
# (I think this is a bug in groundhogr, and I have no idea why this fixes it, but that's what worked for me.)
library(groundhog)
pkgs = c('dplyr', 'tidyr', 'ggplot2', 'ggExtra', 'lme4', 'lmerTest', 'mlogit', 'stringdist', 'sjstats', 'rje')
groundhog.library(pkgs, '2020-03-01')
# Only works in RStudio -- otherwise you have to set the path manually
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
theme_update(strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
axis.text=element_text(size=30, colour = "black"),
axis.title=element_text(size=18, face = "bold"),
axis.title.x = element_text(vjust = 0),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 20),
plot.title = element_text(size = 26, face = "bold", vjust = 1),
panel.margin = unit(1.0, "lines"),
plot.margin = unit(c(0.5,  0.5, 0.5, 0.5), "lines"),
axis.line = element_line(colour = "black", size = 2),
axis.ticks = element_line(color = 'black', size = 3),
axis.ticks.length = unit(.25, 'cm')
)
getIndex = function(x, list) {
y = numeric(length(x))
for (j in 1:length(x)) {
if (any(list %in% x[j])) {
y[j] = which(list %in% x[j])
} else {
y[j] = NA
}
}
return(y)
}
as.string.vector = function(x) {
temp = strsplit(substr(x,2,nchar(x)-1), split=",")[[1]]
return(substr(temp, 2, nchar(temp) - 1))
}
as.string.vector.noquotes = function(x) {
temp = strsplit(substr(x,2,nchar(x)-1), split=",")[[1]]
return(temp)
}
as.numeric.vector = function(x) {
return(as.numeric(strsplit(substr(x,2,nchar(x)-1), split=",")[[1]]))
}
se = function(x) {return(sd(x, na.rm = T) / sqrt(length(x)))}
dodge <- position_dodge(width=0.9)
betterLine = function(data, formula, color = '#105db0') {
lg = summary(lm(formula, data))$coefficients
return(c(geom_abline(intercept = lg[1,1], slope = lg[2,1], color = color, size = 1.25),
geom_abline(intercept = lg[1,1] - lg[1,2], slope = lg[2,1], color = color, linetype = 'dashed', size = 1, alpha = .8),
geom_abline(intercept = lg[1,1] + lg[1,2], slope = lg[2,1], color = color, linetype = 'dashed', size = 1, alpha = .8)))
}
# This function is to compute standardized beta coefficients from a mixed effects model.
# It is copied verbatim from the package 'sjstats', version 0.17.2.
# The reason it's copied here (instead of loading the package) is that, when I did the analysis,
# I was using this latest version of sjstats, but with an old version of R (3.6.3).
# Groundhog won't let me use the latest version with an old version of R, and the older version was giving different answers,
# so I decided the simplest solution was just to copy the relevant function into my script.
# Citation:
# Lüdecke D (2019). _sjstats: Statistical Functions for Regression Models (Version 0.17.5)_. doi: 10.5281/zenodo.1284472 (URL: https://doi.org/10.5281/zenodo.1284472), <URL: https://CRAN.R-project.org/package=sjstats>.
std_beta <- function(fit, ci.lvl = .95, ...) {
# compute ci, two-ways
ci <- 1 - ((1 - ci.lvl) / 2)
# code from Ben Bolker, see
# http://stackoverflow.com/a/26206119/2094622
sdy <- stats::sd(lme4::getME(fit, "y"))
sdx <- apply(lme4::getME(fit, "X"), 2, sd)
sc <- lme4::fixef(fit) * sdx / sdy
se.fixef <- stats::coef(summary(fit))[, "Std. Error"]
se <- se.fixef * sdx / sdy
data_frame(
term = names(lme4::fixef(fit)),
std.estimate = sc,
std.error = se,
conf.low = sc - stats::qnorm(ci) * se,
conf.high = sc + stats::qnorm(ci) * se
) %>%
dplyr::slice(-1)
}
rm(list=ls())
# setup -------------------------------------------------------------------
# load packages with groundhog (http://groundhogr.com/)
# if you get this error:
# "groundhog says: 11 of the 21 packages needed by 'dplyr_0.8.4' are currently loaded, but not with the version that is needed."
# then run "rm(list=ls())", restart your R session, and try again.
#  if you still get the error, then do all the following steps in order:
# switch to R version 4, restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-06-01')", restart your R session, run "library(groundhog); groundhog.library('dplyr', '2020-03-01')", switch back to R version 3, restart your R session, and try running this script again.
# (I think this is a bug in groundhogr, and I have no idea why this fixes it, but that's what worked for me.)
library(groundhog)
pkgs = c('dplyr', 'tidyr', 'ggplot2', 'ggExtra', 'lme4', 'lmerTest', 'mlogit', 'stringdist', 'rje')
groundhog.library(pkgs, '2020-03-01')
# Only works in RStudio -- otherwise you have to set the path manually
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
theme_update(strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
axis.text=element_text(size=30, colour = "black"),
axis.title=element_text(size=18, face = "bold"),
axis.title.x = element_text(vjust = 0),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 20),
plot.title = element_text(size = 26, face = "bold", vjust = 1),
panel.margin = unit(1.0, "lines"),
plot.margin = unit(c(0.5,  0.5, 0.5, 0.5), "lines"),
axis.line = element_line(colour = "black", size = 2),
axis.ticks = element_line(color = 'black', size = 3),
axis.ticks.length = unit(.25, 'cm')
)
getIndex = function(x, list) {
y = numeric(length(x))
for (j in 1:length(x)) {
if (any(list %in% x[j])) {
y[j] = which(list %in% x[j])
} else {
y[j] = NA
}
}
return(y)
}
as.string.vector = function(x) {
temp = strsplit(substr(x,2,nchar(x)-1), split=",")[[1]]
return(substr(temp, 2, nchar(temp) - 1))
}
as.string.vector.noquotes = function(x) {
temp = strsplit(substr(x,2,nchar(x)-1), split=",")[[1]]
return(temp)
}
as.numeric.vector = function(x) {
return(as.numeric(strsplit(substr(x,2,nchar(x)-1), split=",")[[1]]))
}
se = function(x) {return(sd(x, na.rm = T) / sqrt(length(x)))}
dodge <- position_dodge(width=0.9)
betterLine = function(data, formula, color = '#105db0') {
lg = summary(lm(formula, data))$coefficients
return(c(geom_abline(intercept = lg[1,1], slope = lg[2,1], color = color, size = 1.25),
geom_abline(intercept = lg[1,1] - lg[1,2], slope = lg[2,1], color = color, linetype = 'dashed', size = 1, alpha = .8),
geom_abline(intercept = lg[1,1] + lg[1,2], slope = lg[2,1], color = color, linetype = 'dashed', size = 1, alpha = .8)))
}
# This function is to compute standardized beta coefficients from a mixed effects model.
# It is copied verbatim from the package 'sjstats', version 0.17.2.
# The reason it's copied here (instead of loading the package) is that, when I did the analysis,
# I was using this latest version of sjstats, but with an old version of R (3.6.3).
# Groundhog won't let me use the latest version with an old version of R, and the older version was giving different answers,
# so I decided the simplest solution was just to copy the relevant function into my script.
# Citation:
# Lüdecke D (2019). _sjstats: Statistical Functions for Regression Models (Version 0.17.5)_. doi: 10.5281/zenodo.1284472 (URL: https://doi.org/10.5281/zenodo.1284472), <URL: https://CRAN.R-project.org/package=sjstats>.
std_beta <- function(fit, ci.lvl = .95, ...) {
# compute ci, two-ways
ci <- 1 - ((1 - ci.lvl) / 2)
# code from Ben Bolker, see
# http://stackoverflow.com/a/26206119/2094622
sdy <- stats::sd(lme4::getME(fit, "y"))
sdx <- apply(lme4::getME(fit, "X"), 2, sd)
sc <- lme4::fixef(fit) * sdx / sdy
se.fixef <- stats::coef(summary(fit))[, "Std. Error"]
se <- se.fixef * sdx / sdy
data_frame(
term = names(lme4::fixef(fit)),
std.estimate = sc,
std.error = se,
conf.low = sc - stats::qnorm(ci) * se,
conf.high = sc + stats::qnorm(ci) * se
) %>%
dplyr::slice(-1)
}
load("/Users/adam/Me/Psychology/Projects/choicesets/git2/experiments/months/study4_output.rdata")
std_beta(m.cs.s1)
rm(list=ls())
