# Plot
df.bysubj <- df.crits %>% group_by(last.reinf.fac, last.common, subject) %>%
summarize(stay1 = mean(stay1))
df.agg <- df.bysubj %>%
summarize(stay1.mean = mean(stay1), stay1.se = se(stay1))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay1.mean, group = last.common, fill = last.common)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay1.mean + stay1.se, ymin = stay1.mean - stay1.se), width = .5, position = dodge) +
guides(fill = F) +
labs(x = "", y = "") +
#coord_cartesian(ylim=c(.4,.7)) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(color = 'white', fill = NA))
# Plot
df.bysubj <- df.crits %>% filter(sameS2 == 'Different S2' & last.common == 'Common') %>%
group_by(stay1.fac, last.reinf.fac, subject) %>%
summarize(stay2 = mean(stay2))
df.agg <- df.bysubj %>%
summarize(stay2.mean = mean(stay2), stay2.se = se(stay2))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay2.mean, group = stay1.fac, fill = stay1.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay2.mean + stay2.se, ymin = stay2.mean - stay2.se), width = .5, position = dodge) +
guides(fill = F) +
labs(x = "", y = "") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 4),
panel.background = element_rect(color = 'white', fill = NA)) +
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown")) +
coord_cartesian(ylim=c(.2,.8))
# Setup -------------------------------------------------------------------
require(dplyr)
require(ggplot2)
require(lme4)
require(lmerTest)
require(RColorBrewer)
# only works in Rstudio -- otherwise you have to set the path manually!
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
se <- function(x) {sd(x) / sqrt(length(x))};
dodge <- position_dodge(width=0.9)
# Import data -------------------------------------------------------------
# You can change this to whichever simulation you want to analyze.
path = 'expt1/bargh/sims_MFMB_noAS'
df <- read.csv(paste0(path, '.csv')) %>% tbl_df %>% arrange(subject)
df.crits <- df %>%
mutate(
last.common = factor(lag(S2) == (lag(Action1) + 1), c(T, F), c('Common', 'Rare')),
sameS2 = factor(lag(S2) == S2, c(T, F), c("Same S2", "Different S2")),
stay1 = Action1 == lag(Action1),
stay2 = Action2 == lag(Action2),
stay1.fac = factor(Action1 == lag(Action1), c(T, F), c("Same action1", "Different action1")),
stay2.fac = factor(Action2 == lag(Action2), c(T, F), c("Same action2", "Different action2")),
last.reinf = lag(Re),
subject_id = as.numeric(subject),
last.reinf.fac = factor(last.reinf > 0, c(T,F), c("+", "-"))
) %>%
filter(round != min(round, na.rm = T))
# Plot
df.bysubj <- df.crits %>% group_by(last.reinf.fac, last.common, subject) %>%
summarize(stay1 = mean(stay1))
df.agg <- df.bysubj %>%
summarize(stay1.mean = mean(stay1), stay1.se = se(stay1))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay1.mean, group = last.common, fill = last.common)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay1.mean + stay1.se, ymin = stay1.mean - stay1.se), width = .5, position = dodge) +
guides(fill = F) +
labs(x = "", y = "") +
#coord_cartesian(ylim=c(.4,.7)) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(color = 'white', fill = NA))
model1 <- glm(stay1 ~ last.reinf * last.common,
family = binomial, data = df.crits, contrasts = list(last.common = contr.sum))
summary(model1)
# Import data -------------------------------------------------------------
# You can change this to whichever simulation you want to analyze.
path = 'expt1/bargh/sims_MF_noAS'
df <- read.csv(paste0(path, '.csv')) %>% tbl_df %>% arrange(subject)
df.crits <- df %>%
mutate(
last.common = factor(lag(S2) == (lag(Action1) + 1), c(T, F), c('Common', 'Rare')),
sameS2 = factor(lag(S2) == S2, c(T, F), c("Same S2", "Different S2")),
stay1 = Action1 == lag(Action1),
stay2 = Action2 == lag(Action2),
stay1.fac = factor(Action1 == lag(Action1), c(T, F), c("Same action1", "Different action1")),
stay2.fac = factor(Action2 == lag(Action2), c(T, F), c("Same action2", "Different action2")),
last.reinf = lag(Re),
subject_id = as.numeric(subject),
last.reinf.fac = factor(last.reinf > 0, c(T,F), c("+", "-"))
) %>%
filter(round != min(round, na.rm = T))
# Plot
df.bysubj <- df.crits %>% group_by(last.reinf.fac, last.common, subject) %>%
summarize(stay1 = mean(stay1))
df.agg <- df.bysubj %>%
summarize(stay1.mean = mean(stay1), stay1.se = se(stay1))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay1.mean, group = last.common, fill = last.common)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay1.mean + stay1.se, ymin = stay1.mean - stay1.se), width = .5, position = dodge) +
guides(fill = F) +
labs(x = "", y = "") +
#coord_cartesian(ylim=c(.4,.7)) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(color = 'white', fill = NA))
model1 <- glm(stay1 ~ last.reinf * last.common,
family = binomial, data = df.crits, contrasts = list(last.common = contr.sum))
summary(model1)
# Import data -------------------------------------------------------------
# You can change this to whichever simulation you want to analyze.
path = 'expt1/bargh/sims_MB_noAS'
df <- read.csv(paste0(path, '.csv')) %>% tbl_df %>% arrange(subject)
df.crits <- df %>%
mutate(
last.common = factor(lag(S2) == (lag(Action1) + 1), c(T, F), c('Common', 'Rare')),
sameS2 = factor(lag(S2) == S2, c(T, F), c("Same S2", "Different S2")),
stay1 = Action1 == lag(Action1),
stay2 = Action2 == lag(Action2),
stay1.fac = factor(Action1 == lag(Action1), c(T, F), c("Same action1", "Different action1")),
stay2.fac = factor(Action2 == lag(Action2), c(T, F), c("Same action2", "Different action2")),
last.reinf = lag(Re),
subject_id = as.numeric(subject),
last.reinf.fac = factor(last.reinf > 0, c(T,F), c("+", "-"))
) %>%
filter(round != min(round, na.rm = T))
# Plot
df.bysubj <- df.crits %>% group_by(last.reinf.fac, last.common, subject) %>%
summarize(stay1 = mean(stay1))
df.agg <- df.bysubj %>%
summarize(stay1.mean = mean(stay1), stay1.se = se(stay1))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay1.mean, group = last.common, fill = last.common)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay1.mean + stay1.se, ymin = stay1.mean - stay1.se), width = .5, position = dodge) +
guides(fill = F) +
labs(x = "", y = "") +
#coord_cartesian(ylim=c(.4,.7)) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(color = 'white', fill = NA))
# Import data -------------------------------------------------------------
# You can change this to whichever simulation you want to analyze.
path = 'expt1/bargh/sims_MFMB_noAS'
df <- read.csv(paste0(path, '.csv')) %>% tbl_df %>% arrange(subject)
df.crits <- df %>%
mutate(
last.common = factor(lag(S2) == (lag(Action1) + 1), c(T, F), c('Common', 'Rare')),
sameS2 = factor(lag(S2) == S2, c(T, F), c("Same S2", "Different S2")),
stay1 = Action1 == lag(Action1),
stay2 = Action2 == lag(Action2),
stay1.fac = factor(Action1 == lag(Action1), c(T, F), c("Same action1", "Different action1")),
stay2.fac = factor(Action2 == lag(Action2), c(T, F), c("Same action2", "Different action2")),
last.reinf = lag(Re),
subject_id = as.numeric(subject),
last.reinf.fac = factor(last.reinf > 0, c(T,F), c("+", "-"))
) %>%
filter(round != min(round, na.rm = T))
# Plot
df.bysubj <- df.crits %>% group_by(last.reinf.fac, last.common, subject) %>%
summarize(stay1 = mean(stay1))
df.agg <- df.bysubj %>%
summarize(stay1.mean = mean(stay1), stay1.se = se(stay1))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay1.mean, group = last.common, fill = last.common)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay1.mean + stay1.se, ymin = stay1.mean - stay1.se), width = .5, position = dodge) +
guides(fill = F) +
labs(x = "", y = "") +
#coord_cartesian(ylim=c(.4,.7)) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(color = 'white', fill = NA))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay1.mean, group = last.common, fill = last.common)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay1.mean + stay1.se, ymin = stay1.mean - stay1.se), width = .5, position = dodge) +
guides(fill = F) +
labs(x = "", y = "") +
coord_cartesian(ylim=c(.4,.7)) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(color = 'white', fill = NA))
rm(list=ls())
load("~/Me/Psychology/Projects/choicesets/git2/experiments/months/3/analysis.rdata")
# effect on generation -- dichotomized
graph.s1.binary = df.words.filt %>% group_by(high_s1value, subject) %>%
summarize(in.cs = mean(in.cs, na.rm = T), chosen = mean(chosen, na.rm = T)) %>%
group_by(high_s1value) %>%
summarize(in.cs.m = mean(in.cs, na.rm = T), in.cs.se = se(in.cs),
chosen.m = mean(chosen, na.rm = T), chosen.se = se(chosen))
if (expt != '3') {
cs.s1.binary.breaks = c(.35, .4)
cs.s1.binary.lims = c(.34, .41)
} else {
cs.s1.binary.breaks = c(.35, .45)
cs.s1.binary.lims = c(.35, .47)
}
ggplot(graph.s1.binary, aes(x = high_s1value, y = in.cs.m, group = 1)) +
geom_point(size = 5) +
stat_summary(fun.y=sum, geom="line", size = 1.5) +
geom_errorbar(aes(ymin = in.cs.m - in.cs.se, ymax = in.cs.m+in.cs.se), width = .2) +
xlab('') + ylab('') +
scale_x_discrete(labels = c('', '')) +
scale_y_continuous(breaks = cs.s1.binary.breaks, limits = cs.s1.binary.lims) +
theme(legend.position = 'none')
rm(list=ls())
load("/Users/adam/Me/Psychology/Projects/Dezfouli/git/expt1/analysis.RData")
summary(model2)
ggplot(df.agg, aes(x = last.reinf.fac, y = rt2.mean, group = stay1.fac, fill = stay1.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = rt2.mean + rt2.se, ymin = rt2.mean - rt2.se), width = .5, position = dodge) +
guides(fill = F) + ylim(-100,500) +
labs(x = "", y = "") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(fill = 'white'))+
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown"))
df.bysubj <- df.crits %>% filter(sameS2 == 'Different S2' & last.common == 'Common') %>%
group_by(stay1.fac, last.reinf.fac, stay2.fac, subject) %>%
summarize(rt2 = mean(rt2))
df.bysubj2 = df.bysubj %>% filter(stay2.fac == 'Same action2')
for (i in 1:nrow(df.bysubj2)) {
other = df.bysubj$subject == df.bysubj2$subject[i] & df.bysubj$last.reinf.fac == df.bysubj2$last.reinf.fac[i] & df.bysubj$stay1.fac == df.bysubj2$stay1.fac[i] & df.bysubj$stay2.fac == 'Different action2'
if (any(other)) {
df.bysubj2$rt2.diff[i] = df.bysubj$rt2[other] - df.bysubj2$rt2[i]
}
}
df.agg <- df.bysubj2 %>%
summarize(rt2.mean = mean(rt2.diff), rt2.se = se(rt2.diff))
ggplot(df.agg, aes(x = last.reinf.fac, y = rt2.mean, group = stay1.fac, fill = stay1.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = rt2.mean + rt2.se, ymin = rt2.mean - rt2.se), width = .5, position = dodge) +
guides(fill = F) + ylim(-100,500) +
labs(x = "", y = "") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(fill = 'white'))+
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown"))
summary(model3)
# testing
ggplot(df.crits, aes(x = rt2, group = stay1.fac, fill = stay1.fac)) +
geom_histogram(alpha = .6, position = 'identity') +
xlab('') + ylab('') +
scale_y_continuous(labels = NULL, breaks = NULL) +
scale_x_continuous(breaks = c(0,1000,2000), limits = c(0,2200)) +
facet_wrap(~ last.common + last.reinf.fac) +
theme(strip.text.x = element_blank(), legend.position = 'none') +
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown"))
# Show RT distribution
ggplot(df.crits, aes(x = rt2, group = stay1.fac, fill = stay1.fac)) +
geom_histogram(alpha = .6, position = 'identity') +
xlab('') + ylab('') +
scale_y_continuous(labels = NULL, breaks = NULL) +
scale_x_continuous(breaks = c(0,1000,2000), limits = c(0,2200)) +
facet_wrap(~ last.common + last.reinf.fac) +
theme(strip.text.x = element_blank(), legend.position = 'none') +
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown"))
ggplot(df.crits %>% group_by(stay1.fac, last.reinf.fac) %>% summarize(rt2 = mean(rt2)),
aes(x = last.reinf.fac, y = rt2, group = last.common, fill = last.common)) +
geom_bar(stat = "identity", position = dodge)
df.bysubj <- df.crits %>% filter(sameS2 == 'Different S2') %>%
group_by(stay1.fac, last.reinf.fac, stay2.fac, last.common, subject) %>%
summarize(rt2 = mean(rt2))
df.bysubj2 = df.bysubj %>% filter(stay2.fac == 'Same action2')
for (i in 1:nrow(df.bysubj2)) {
other = df.bysubj$subject == df.bysubj2$subject[i] & df.bysubj$last.reinf.fac == df.bysubj2$last.reinf.fac[i] & df.bysubj$last.common == df.bysubj2$last.common[i] & df.bysubj$stay1.fac == df.bysubj2$stay1.fac[i] & df.bysubj$stay2.fac == 'Different action2'
if (any(other)) {
df.bysubj2$rt2.diff[i] = df.bysubj$rt2[other] - df.bysubj2$rt2[i]
}
}
df.agg <- df.bysubj2 %>%
summarize(rt2.mean = mean(rt2.diff), rt2.se = se(rt2.diff))
ggplot(df.agg, aes(x = last.reinf.fac, y = rt2.mean, group = stay1.fac, fill = stay1.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = rt2.mean + rt2.se, ymin = rt2.mean - rt2.se), width = .5, position = dodge) +
guides(fill = F) + #ylim(-100,500) +
#labs(x = "", y = "") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(fill = 'white'))+
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown")) +
facet_wrap(~last.common)
save.image('analysis.RData')
df.bysubj <- df.crits %>% filter(sameS2 == 'Different S2' & last.common == 'Common') %>%
group_by(stay1.fac, last.reinf.fac, stay2.fac, subject) %>%
summarize(rt2 = mean(rt2))
df.bysubj2 = df.bysubj %>% filter(stay2.fac == 'Same action2')
for (i in 1:nrow(df.bysubj2)) {
other = df.bysubj$subject == df.bysubj2$subject[i] & df.bysubj$last.reinf.fac == df.bysubj2$last.reinf.fac[i] & df.bysubj$stay1.fac == df.bysubj2$stay1.fac[i] & df.bysubj$stay2.fac == 'Different action2'
if (any(other)) {
df.bysubj2$rt2.diff[i] = df.bysubj$rt2[other] - df.bysubj2$rt2[i]
}
}
df.agg <- df.bysubj2 %>%
summarize(rt2.mean = mean(rt2.diff), rt2.se = se(rt2.diff))
ggplot(df.agg, aes(x = last.reinf.fac, y = rt2.mean, group = stay1.fac, fill = stay1.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = rt2.mean + rt2.se, ymin = rt2.mean - rt2.se), width = .5, position = dodge) +
guides(fill = F) + ylim(-100,500) +
labs(x = "", y = "") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(fill = 'white'))+
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown"))
model3 = lmer(rt2 ~ stay1.fac * stay2.fac * last.reinf + (1 + stay1.fac * stay2.fac * last.reinf | subject),
data = df.crits %>% filter(sameS2 == 'Different S2' & last.common == 'Common'),
contrasts = list(stay1.fac = contr.sum, stay2.fac = contr.sum))
save.image('analysis.RData')
setwd("~/Me/Psychology/Projects/Dezfouli/git/expt1")
save.image('analysis.RData')
rm(list=ls())
setwd("~/Me/Psychology/Projects/Dezfouli/git/expt2")
load("~/Me/Psychology/Projects/Dezfouli/git/expt2/analysis.RData")
summary(model4)
# I'm plotting these effects by showing the RT difference b/w choosing the same A2 and different A2
# But the statistics are done over the actual RT, where same vs. different A2 is another factor in the interaction
df.bysubj <- df.crits %>% filter(sameS2 == 'Different S2' & !is.na(last.reinf.fac)) %>%
group_by(stay1.fac, last.reinf.fac, stay2.fac, last.common, subject) %>%
summarize(rt2 = mean(rt2))
# differences version
df.bysubj2 = df.bysubj %>% filter(stay2.fac == 'Same action2')
for (i in 1:nrow(df.bysubj2)) {
other = df.bysubj$subject == df.bysubj2$subject[i] & df.bysubj$last.reinf.fac == df.bysubj2$last.reinf.fac[i] & df.bysubj$stay1.fac == df.bysubj2$stay1.fac[i] & df.bysubj$stay2.fac == 'Different action2'
if (any(other)) {
df.bysubj2$rt2.diff[i] = df.bysubj$rt2[other] - df.bysubj2$rt2[i]
}
}
df.agg <- df.bysubj2 %>%
summarize(rt2.mean = mean(rt2.diff), rt2.se = se(rt2.diff))
ggplot(df.agg, aes(x = last.reinf.fac, y = rt2.mean, group = stay1.fac, fill = stay1.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = rt2.mean + rt2.se, ymin = rt2.mean - rt2.se), width = .5, position = dodge) +
guides(fill = F) +
labs(x = "", y = "") + ylim(-150,300)+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(fill = 'white'))+
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown")) +
facet_wrap(~ last.common)
# Show RT distribution
ggplot(df.crits, aes(x = rt2, group = stay1.fac, fill = stay1.fac)) +
geom_histogram(alpha = .6, position = 'identity') +
xlab('') + ylab('') +
scale_y_continuous(labels = NULL, breaks = NULL) +
scale_x_continuous(breaks = c(0,1000,2000), limits = c(0,2200)) +
facet_wrap(~ last.common + last.reinf.fac) +
theme(strip.text.x = element_blank(), legend.position = 'none') +
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown"))
save.image('analysis.RData')
rm(list=ls())
# setup -------------------------------------------------------------------
require(dplyr)
require(ggplot2)
require(ggExtra)
require(lme4)
require(lmerTest)
require(mlogit)
require(stringdist)
require(rje)
require(tidyr)
theme_update(strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
axis.text=element_text(size=30, colour = "black"),
axis.title=element_text(size=18, face = "bold"),
axis.title.x = element_text(vjust = 0),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 20),
plot.title = element_text(size = 26, face = "bold", vjust = 1),
panel.margin = unit(1.0, "lines"),
plot.margin = unit(c(0.5,  0.5, 0.5, 0.5), "lines"),
axis.line = element_line(colour = "black", size = 2),
axis.ticks = element_line(color = 'black', size = 3),
axis.ticks.length = unit(.25, 'cm')
)
# Only works in RStudio -- otherwise you have to set the path manually
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
se = function(x) {return(sd(x, na.rm = T) / sqrt(sum(!is.na(x))))}
dodge <- position_dodge(width=0.9)
betterLine = function(data, formula, color = '#105db0') {
lg = summary(lm(formula, data))$coefficients
return(c(geom_abline(intercept = lg[1,1], slope = lg[2,1], color = color, size = 1.25),
geom_abline(intercept = lg[1,1] - lg[1,2], slope = lg[2,1], color = color, linetype = 'dashed', size = 1, alpha = .8),
geom_abline(intercept = lg[1,1] + lg[1,2], slope = lg[2,1], color = color, linetype = 'dashed', size = 1, alpha = .8)))
}
# import data -------------------------------------------------------------
df = read.csv('data.csv') %>% filter(DistributionChannel != 'preview', Status == 0) %>%
dplyr::select(StartDate, ResponseId, movieChoice, choiceTime_Page.Submit,
cs_1, cs_3, cs_4, cs_5, cs_6, cs_7, cs_8, cs_13,
cs_time_Page.Submit,
val_q_1, val_q_2, val_q_3, val_q_4, val_q_5, val_q_6, val_q_7, val_q_8,
val_time_Page.Submit,
freq_q_1, freq_q_2, freq_q_3, freq_q_4, freq_q_5, freq_q_6, freq_q_7, freq_q_8,
freq_time_Page.Submit)
df2 = data.frame(subject = character(), food = character(), val = numeric(), freq = numeric())
cs.names = c('cs_1', 'cs_3', 'cs_4', 'cs_5', 'cs_6', 'cs_7', 'cs_13')
val.names = c('val_q_1', 'val_q_2', 'val_q_3', 'val_q_4', 'val_q_5', 'val_q_6', 'val_q_7', 'val_q_8')
freq.names = c('freq_q_1', 'freq_q_2', 'freq_q_3', 'freq_q_4', 'freq_q_5', 'freq_q_6', 'freq_q_7', 'freq_q_8')
for (i in 1:nrow(df)) {
subj = df$ResponseId[i]
for (j in 1:length(cs.names)) {
food = as.character(df[i, cs.names[j]])
if (nchar(food) > 0) {
val = as.numeric(as.character(df[i, val.names[j]]))
freq = as.numeric(as.character(df[i, freq.names[j]]))
df2 = rbind(df2, data.frame(subject = subj, food = food, val = val, freq = freq))
}
}
}
# plot data
p = ggplot(data = df2, aes(x = val, y = freq)) +
geom_jitter(size = 2) +
geom_vline(xintercept = 4) +
geom_hline(yintercept = 4) +
labs(x = '', y = '')
ggMarginal(p, type='histogram', xparams = list(bins=8), yparams = list(bins = 8))
# test whether general value > midpoint (4), controlling for freq
m1 = lmer(val ~ freq + (freq | subject), data = df2 %>% mutate(val = val - 4, freq = freq - 4))
summary(m1)
# test whether freq > midpoint (4), controlling for value
m2 = lmer(freq ~ val + (val | subject), data = df2 %>% mutate(val = val - 4, freq = freq - 4))
summary(m2)
m2.null = lmer(freq ~ 0+val + (val | subject), data = df2 %>% mutate(val = val - 4, freq = freq - 4))
BFnull.freq = exp((BIC(m2) - BIC(m2.null)) / 2)
BFnull.freq
## do proper "inferred probability" analysis
df.subj = df2 %>% group_by(subject) %>%
summarize(cs.size = n(), nas = any(is.na(val) | is.na(freq)),
var.choice = sd(c(val, freq)),
val = mean(val), freq = mean(freq))
df2.filt = df2 %>% filter(!(subject %in% df.subj$subject[df.subj$nas == T | df.subj$var.choice == 0]))
df2.subj.filt = df.subj %>% filter(!nas & var.choice != 0)
# assign every other midpoint to high or low (for dichotomization)
c1 = 0
c2 = 0
for (i in 1:nrow(df2.filt)) {
if (df2.filt$val[i] == 4) {
df2.filt$val.four[i] = c1
c1 = ifelse(c1 == 0, 1, 0)
} else {
df2.filt$val.four[i] = -1
}
if (df2.filt$freq[i] == 4) {
df2.filt$freq.four[i] = c2
c2 = ifelse(c2 == 0, 1, 0)
} else {
df2.filt$freq.four[i] = -1
}
}
df2.filt = df2.filt %>%
mutate(val.adj = ifelse(val == 4, ifelse(val.four == 0, 3.9, 4.1), val),
freq.adj = ifelse(val == 4, ifelse(freq.four == 0, 3.9, 4.1), freq),
val.fac = factor(val.adj > 4, c(F,T), c('Low', 'High')),
freq.fac = factor(freq.adj > 4, c(F,T), c('Low', 'High')))
df.model.cs = df2.filt %>% group_by(subject) %>%
summarize(ll = mean(val.fac == 'Low' & freq.fac == 'Low'),
lh = mean(val.fac == 'Low' & freq.fac == 'High'),
hl = mean(val.fac == 'High' & freq.fac == 'Low'),
hh = mean(val.fac == 'High' & freq.fac == 'High')) %>%
gather("type", "prob", -subject) %>%
mutate(val.high = type %in% c('hl', 'hh'), freq.high = type %in% c('lh', 'hh'))
m.cs = lmer(prob ~ val.high + freq.high + (1 | subject), data = df.model.cs)
summary(m.cs)
m.cs.null = lmer(prob ~ val.high + (1 | subject), data = df.model.cs)
exp((BIC(m.cs) - BIC(m.cs.null)) / 2)
graph.cs = df2.filt %>% select(subject, val.fac, freq.fac) %>%
rename(val = val.fac, freq = freq.fac) %>%
gather("type", "rank", -subject) %>%
group_by(type, subject) %>%
summarize(low = mean(rank == 'Low'), high = mean(rank == 'High')) %>%
gather("rank", "prob", -c(subject,type)) %>%
group_by(type, rank) %>%
summarize(prob.m = mean(prob), prob.se = se(prob)) %>%
group_by() %>%
mutate(type = factor(type, c('val', 'freq')), rank = factor(rank, c('low', 'high')))
exp((BIC(m.cs) - BIC(m.cs.null)) / 2)
graph.cs = df2.filt %>% select(subject, val.fac, freq.fac) %>%
rename(val = val.fac, freq = freq.fac) %>%
gather("type", "rank", -subject) %>%
group_by(type, subject) %>%
summarize(low = mean(rank == 'Low'), high = mean(rank == 'High')) %>%
gather("rank", "prob", -c(subject,type)) %>%
group_by(type, rank) %>%
summarize(prob.m = mean(prob), prob.se = se(prob)) %>%
group_by() %>%
mutate(type = factor(type, c('val', 'freq')), rank = factor(rank, c('low', 'high')))
ggplot(graph.cs, aes(x = rank, y = prob.m, group = type, color = type)) +
geom_point(size = 4) +
geom_line(size = 1.5) +
geom_errorbar(aes(ymin = prob.m - prob.se, ymax = prob.m + prob.se), width = .2) +
xlab('') + ylab('') +
scale_x_discrete(labels = NULL) +
#scale_y_continuous(limits = c(.15,.85), breaks = c(.2, .8)) +
theme(legend.position = 'none') +
scale_color_manual(values = c('#d11a02', '#105db0'))
summary(m.cs)
m.cs.null = lmer(prob ~ val.high + (1 | subject), data = df.model.cs)
exp((BIC(m.cs) - BIC(m.cs.null)) / 2)
summary(m.cs.null)
summary(m.cs)
exp((BIC(m.cs) - BIC(m.cs.null)) / 2)
